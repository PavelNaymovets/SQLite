Задание 1. Преобразовать дату начала потока в таблице потоков к виду год-месяц-день. Используйте
команду UPDATE.

Таблица до изменений
+----+-----------+--------+------------+--------------------+-------------+
| id | course_id | number | started_at | number_of_students | finished_at |
+----+-----------+--------+------------+--------------------+-------------+
| 1  | 3         | 165    | 18.08.2020 | 34                 |             |
| 2  | 2         | 178    | 02.10.2020 | 37                 |             |
| 3  | 1         | 203    | 12.11.2020 | 35                 |             |
| 4  | 1         | 210    | 03.12.2020 | 41                 |             |
+----+-----------+--------+------------+--------------------+-------------+

1. UPDATE streams SET started_at = SUBSTR(started_at, 7, 4)||'-'||SUBSTR(started_at, 4,2)||'-'||SUBSTR(started_at, 1,2);
2. SELECT*FROM streams;

Таблица после изменений
+----+-----------+--------+------------+--------------------+-------------+
| id | course_id | number | started_at | number_of_students | finished_at |
+----+-----------+--------+------------+--------------------+-------------+
| 1  | 3         | 165    | 2020-08-18 | 34                 |             |
| 2  | 2         | 178    | 2020-10-02 | 37                 |             |
| 3  | 1         | 203    | 2020-11-12 | 35                 |             |
| 4  | 1         | 210    | 2020-12-03 | 41                 |             |
+----+-----------+--------+------------+--------------------+-------------+

Задание 2. Получите идентификатор и номер потока, запланированного на самую позднюю дату.

1.SELECT id, number, MAX(started_at) FROM streams;
+----+--------+-----------------+
| id | number | MAX(started_at) |
+----+--------+-----------------+
| 4  | 210    | 2020-12-03      |
+----+--------+-----------------+

Задание 3. Покажите уникальные значения года по датам начала потоков обучения.

1.SELECT DISTINCT(SUBSTR(started_at, 1, 4)) from streams;
+----------------------------+
| (SUBSTR(started_at, 1, 4)) |
+----------------------------+
| 2020                       |
+----------------------------+

Задание 4. Найдите количество преподавателей в базе данных. Выведите искомое значение в столбец с
именем total_teachers.

1 способ (праймари кей идет по порядку. Вытаскивая значение последнего получаем количество преподавателей):

1.SELECT MAX(id) AS total_teachers FROM teachers;
+----------------+
| total_teachers |
+----------------+
| 3              |
+----------------+

2 способ (посчитать количество имен):

1.SELECT name, COUNT(*) AS total_teachers FROM teachers;

Задание 5. Покажите даты начала двух последних по времени потоков

+----+-----------+--------+------------+--------------------+-------------+
| id | course_id | number | started_at | number_of_students | finished_at |
+----+-----------+--------+------------+--------------------+-------------+
| 1  | 3         | 165    | 2020-08-18 | 34                 |             |
| 2  | 2         | 178    | 2020-10-02 | 37                 |             |
| 3  | 1         | 203    | 2020-11-12 | 35                 |             |
| 4  | 1         | 210    | 2020-12-03 | 41                 |             |
+----+-----------+--------+------------+--------------------+-------------+

Способ 1 (мы знаем что данные в таблицы расположены в порядке возрастания, поэтому можно выбрать 2 последние даты по id):

1. SELECT started_at FROM streams WHERE id > 2;
+------------+
| started_at |
+------------+
| 2020-11-12 |
| 2020-12-03 |
+------------+

Способ 2 (примени оператор LIMIT. Так как нас интересует две самые поздние даты, то отсортируем значения дат в порядке убывания и выведем первые 2.
Так мы получим 2 самые поздние даты)

1. SELECT started_at FROM streams ORDER BY started_at DESC LIMIT 2;
+------------+
| started_at |
+------------+
| 2020-12-03 |
| 2020-11-12 |
+------------+

Задание 6. Найдите среднюю успеваемости учеников по всем потокам преподавателя с идентификатором
равным 1.

+------------+-----------+-------+
| teacher_id | stream_id | grade |
+------------+-----------+-------+
| 3          | 1.0       | 4.7   |
| 2          | 2.0       | 4.9   |
| 1          | 3.0       | 4.8   |
| 1          | 4.0       | 4.9   |
+------------+-----------+-------+

1. SELECT teacher_id, AVG(grade) FROM grades GROUP BY teacher_id HAVING teacher_id = 1;
+------------+------------+
| teacher_id | AVG(grade) |
+------------+------------+
| 1          | 4.85       |
+------------+------------+

1. SELECT teacher_id, AVG(grade) FROM grades WHERE teacher_id = 1;
+------------+------------+
| teacher_id | AVG(grade) |
+------------+------------+
| 1          | 4.85       |
+------------+------------+

Задание 7. Дополнительное задание (выполняется по желанию): найдите идентификаторы
преподавателей, у которых средняя успеваемость по всем потокам меньше 4.8.

+------------+-----------+-------+
| teacher_id | stream_id | grade |
+------------+-----------+-------+
| 3          | 1.0       | 4.7   |
| 2          | 2.0       | 4.9   |
| 1          | 3.0       | 4.8   |
| 1          | 4.0       | 4.9   |
+------------+-----------+-------+

1. SELECT teacher_id, AVG(grade) AS avg_grade FROM grades GROUP BY teacher_id HAVING avg_grade < 4.8;
+------------+-----------+
| teacher_id | avg_grade |
+------------+-----------+
| 3          | 4.7       |
+------------+-----------+